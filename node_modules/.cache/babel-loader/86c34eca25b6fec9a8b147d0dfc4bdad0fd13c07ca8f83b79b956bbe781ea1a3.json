{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\calculator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CalculatorContext from './CalculatorContext';\nimport CalculatorDisplay from './CalculatorDisplay';\nimport CalculatorButtons from './CalculatorButtons';\nimport './Calculator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [displayValue, setDisplayValue] = useState('0');\n  const [operator, setOperator] = useState(null);\n  const [previousValue, setPreviousValue] = useState(null);\n  const [shouldClear, setShouldClear] = useState(false);\n  const handleInput = value => {\n    if (/\\d/.test(value)) {\n      handleNumberInput(value);\n    } else if (['+', '-', '*', '/'].includes(value)) {\n      handleOperatorInput(value);\n    } else if (value === '=') {\n      handleEqualsInput();\n    } else if (value === 'C') {\n      handleClearInput();\n    } else if (value === '.') {\n      handleDecimalInput();\n    }\n  };\n  const handleNumberInput = value => {\n    if (shouldClear) {\n      setDisplayValue(value);\n      setShouldClear(false);\n    } else {\n      setDisplayValue(displayValue === '0' ? value : displayValue + value);\n    }\n  };\n  const handleOperatorInput = value => {\n    if (operator === null) {\n      setOperator(value);\n      setPreviousValue(displayValue);\n      setDisplayValue('0');\n    } else {\n      handleEqualsInput();\n      setOperator(value);\n    }\n  };\n  const handleEqualsInput = () => {\n    if (operator !== null) {\n      const currentValue = parseFloat(displayValue);\n      const previous = parseFloat(previousValue);\n      switch (operator) {\n        case '+':\n          setDisplayValue(previous + currentValue);\n          break;\n        case '-':\n          setDisplayValue(previous - currentValue);\n          break;\n        case '*':\n          setDisplayValue(previous * currentValue);\n          break;\n        case '/':\n          setDisplayValue(previous / currentValue);\n          break;\n        default:\n          break;\n      }\n      setOperator(null);\n      setPreviousValue(null);\n      setShouldClear(true);\n    }\n  };\n  const handleClearInput = () => {\n    setDisplayValue('0');\n    setOperator(null);\n    setPreviousValue(null);\n    setShouldClear(false);\n  };\n  const handleDecimalInput = () => {\n    if (!displayValue.includes('.')) {\n      setDisplayValue(displayValue + '.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CalculatorContext.Provider, {\n    value: {\n      handleInput\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator\",\n      children: [/*#__PURE__*/_jsxDEV(CalculatorDisplay, {\n        displayValue: displayValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CalculatorButtons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Bw5IbuxDIjgwLuwlVHLFaqHrGWw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CalculatorContext","CalculatorDisplay","CalculatorButtons","jsxDEV","_jsxDEV","App","_s","displayValue","setDisplayValue","operator","setOperator","previousValue","setPreviousValue","shouldClear","setShouldClear","handleInput","value","test","handleNumberInput","includes","handleOperatorInput","handleEqualsInput","handleClearInput","handleDecimalInput","currentValue","parseFloat","previous","Provider","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/calculator/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport CalculatorContext from './CalculatorContext';\nimport CalculatorDisplay from './CalculatorDisplay';\nimport CalculatorButtons from './CalculatorButtons';\nimport './Calculator.css';\n\nfunction App() {\n  const [displayValue, setDisplayValue] = useState('0');\n  const [operator, setOperator] = useState(null);\n  const [previousValue, setPreviousValue] = useState(null);\n  const [shouldClear, setShouldClear] = useState(false);\n\n  const handleInput = value => {\n    if (/\\d/.test(value)) {\n      handleNumberInput(value);\n    } else if (['+', '-', '*', '/'].includes(value)) {\n      handleOperatorInput(value);\n    } else if (value === '=') {\n      handleEqualsInput();\n    } else if (value === 'C') {\n      handleClearInput();\n    } else if (value === '.') {\n      handleDecimalInput();\n    }\n  };\n\n  const handleNumberInput = value => {\n    if (shouldClear) {\n      setDisplayValue(value);\n      setShouldClear(false);\n    } else {\n      setDisplayValue(displayValue === '0' ? value : displayValue + value);\n    }\n  };\n\n  const handleOperatorInput = value => {\n    if (operator === null) {\n      setOperator(value);\n      setPreviousValue(displayValue);\n      setDisplayValue('0');\n    } else {\n      handleEqualsInput();\n      setOperator(value);\n    }\n  };\n\n  const handleEqualsInput = () => {\n    if (operator !== null) {\n      const currentValue = parseFloat(displayValue);\n      const previous = parseFloat(previousValue);\n      switch (operator) {\n        case '+':\n          setDisplayValue(previous + currentValue);\n          break;\n        case '-':\n          setDisplayValue(previous - currentValue);\n          break;\n        case '*':\n          setDisplayValue(previous * currentValue);\n          break;\n        case '/':\n          setDisplayValue(previous / currentValue);\n          break;\n        default:\n          break;\n      }\n      setOperator(null);\n      setPreviousValue(null);\n      setShouldClear(true);\n    }\n  };\n\n  const handleClearInput = () => {\n    setDisplayValue('0');\n    setOperator(null);\n    setPreviousValue(null);\n    setShouldClear(false);\n  };\n\n  const handleDecimalInput = () => {\n    if (!displayValue.includes('.')) {\n      setDisplayValue(displayValue + '.');\n    }\n  };\n\n  return (\n    <CalculatorContext.Provider value={{ handleInput }}>\n      <div className=\"calculator\">\n        <CalculatorDisplay displayValue={displayValue} />\n        <CalculatorButtons />\n      </div>\n    </CalculatorContext.Provider>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}